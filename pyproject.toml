[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "pynlme"
version = "0.2.2"
description = "Nonlinear Mixed Effects Models for Python with Rust backend"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "William LÃ¶vfors", email = "william.lovfors@liu.se"},
]
keywords = ["statistics", "mixed-effects", "nonlinear", "nlme"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Mathematics",
]
dependencies = [
    "numpy>=2.0",
    "scipy>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "matplotlib>=3.0",
    "pandas>=1.0",
    "maturin>=1.0,<2.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0",
    "coverage[toml]>=7.0",
    "pytest-cov>=4.0",
]
benchmark = [
    "psutil>=5.9.0",
    "seaborn>=0.12.0",
]

[project.urls]
Homepage = "https://github.com/willov/PyNLME"
Repository = "https://github.com/willov/PyNLME"
Documentation = "https://github.com/willov/PyNLME/blob/main/docs/README.md"
Issues = "https://github.com/willov/PyNLME/issues"
Changelog = "https://github.com/willov/PyNLME/blob/main/CHANGELOG.md"

[tool.maturin]
python-source = "src"
manifest-path = "Cargo.toml"
module-name = "pynlme._core"
features = ["pyo3/extension-module"]

[tool.uv.sources]
pynlme = { workspace = true }

[dependency-groups]
dev = [
    "cibuildwheel>=2.23.3",
    "matplotlib>=3.10.3",
    "maturin>=1.8.7",
    "pandas>=2.3.0",
    "psutil>=7.0.0",
    "pynlme",
    "pytest>=8.3.5",
    "seaborn>=0.13.2",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmark tests",
]

[tool.coverage.run]
source = ["src/pynlme"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/_core.abi3.so",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B018"]  # Allow useless expressions in tests
"examples/*" = ["B018", "F841"]  # Allow useless expressions and unused variables in examples

[tool.cibuildwheel]
# Build for Python 3.11+ only
build = ["cp311-*", "cp312-*", "cp313-*"]
# Skip 32-bit and PyPy builds for now
skip = ["*-win32", "*-manylinux_i686", "pp*-*"]
# Test the built wheels
test-requires = ["pytest", "numpy", "scipy"]
test-command = "pytest {project}/tests/test_basic.py -v"
# Build options
build-verbosity = 1

[tool.cibuildwheel.linux]
before-all = "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
environment = { PATH = "$HOME/.cargo/bin:$PATH" }

[tool.cibuildwheel.windows]
before-all = "powershell -Command \"& { Invoke-WebRequest -Uri 'https://win.rustup.rs/x86_64' -OutFile 'rustup-init.exe'; .\\rustup-init.exe -y --default-host x86_64-pc-windows-msvc }\""
environment = { PATH = "$USERPROFILE\\.cargo\\bin;$PATH" }

[tool.cibuildwheel.macos]
before-all = "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
environment = { PATH = "$HOME/.cargo/bin:$PATH" }
