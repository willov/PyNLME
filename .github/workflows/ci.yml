name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install dependencies
      run: |
        uv sync --dev
        uv pip install maturin

    - name: Build Rust extension
      run: uv run maturin develop

    - name: Run tests
      run: uv run pytest tests/ -v --tb=short

    - name: Run type checking
      run: uv run mypy src/pynlme/ --ignore-missing-imports || true

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Build wheels
      run: |
        uv pip install maturin
        uv run maturin build --release

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: target/wheels/

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync --dev

    - name: Run Rust formatting check
      run: cargo fmt --check

    - name: Run Rust linting
      run: cargo clippy -- -D warnings

    - name: Run Python formatting check
      run: uv run ruff format --check src/ tests/ examples/ || true

    - name: Run Python linting
      run: uv run ruff check src/ tests/ examples/ || true
